---
  Description: "A Cfn template that included the infrastructure to build a basic httpd web application"
  Parameters:
    CidrBlockAzA:
      Type: String
      Default: "10.0.0.0/24"   
    CidrBlockAzB:
      Type: String
      Default: "10.0.0.0/24"      
    VpcCidrBlock:
      Type: String
      Default: "10.0.0.0/16"        
    KeyName:
      Type: String
      Default: "garrett-keypair"
    ImageId:
      Type: String  
      Default: "ami-a0cfeed8"
    InstanceType:
      Type: String  
      Default: "t2.medium"
  Resources:
    myVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCidrBlock
        EnableDnsSupport: 'false'
        EnableDnsHostnames: 'false'
        InstanceTenancy: dedicated
        Tags:
        - Key: Name
          Value: garretts-cfn-vpc
    SubnetAzA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: myVPC
        CidrBlock: !Ref CidrBlockAzA
        AvailabilityZone: "us-west-2a"
        Tags:
        - Key: Name
          Value: garretts-cfn-subnet 
    SubnetAzB:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: myVPC
        CidrBlock: !Ref CidrBlockAzB
        AvailabilityZone: "us-west-2b"
        Tags:
        - Key: Name
          Value: garretts-cfn-subnet         
    FirstEIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
    SecondEIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
    LoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        SubnetMappings:
          - AllocationId: !GetAtt 
              - FirstEIP
              - AllocationId
            SubnetId: !Ref CidrBlockAzA
          - AllocationId: !GetAtt 
              - SecondEIP
              - AllocationId
            SubnetId: !Ref CidrBlockAzB
        Type: application
        IpAddressType: ipv4
    TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        Port: 1000
        Protocol: HTTPS
        TargetType: instance
        VpcId: !Ref myVPC
    Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
          DefaultActions:
          - Type: forward
          TargetGroupArn:
              Ref: TargetGroup
          LoadBalancerArn:
            Ref: LoadBalancer
          Port: '8000'
          Protocol: HTTP
    InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Ref: myVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: -1
          ToPort: 22
          CidrIp: 0.0.0.0/0  
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
    LaunchConfig: 
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties: 
        KeyName: 
          Ref: "KeyName"
        ImageId: 
          Ref: "ImageId"
        UserData: 
          Fn::Base64: 
            !Sub |
              yum update -y
              yum install httpd -y
        SecurityGroups: 
          - Ref: "InstanceSecurityGroup"
        InstanceType: 
          Ref: "InstanceType"
        BlockDeviceMappings: 
          - DeviceName: "/dev/sda1"
            Ebs: 
              VolumeSize: "50"
              VolumeType: "io1"
              Iops: 200
          - DeviceName: "/dev/sdm"
            Ebs: 
              VolumeSize: "100"
              DeleteOnTermination: "true"  
    AutoScalingGroup:          
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties: 
        LaunchConfigurationName: 
          Ref: "LaunchConfig"
        MinSize: "2"
        MaxSize: "2"
        TargetGroupARNs:
          - Ref: TargetGroup
        VPCZoneIdentifier:
          - Ref: SubnetAzA
          - Ref: SubnetAzB
      DependsOn: LaunchConfig
  Outputs:   
    AutoScalingGroup:
      Description: "The newly created asg"
      Value:
        Ref: "AutoScalingGroup"
    LaunchConfig:
      Description: "the newly created launch config"
      Value:
        Ref: "LaunchConfig"
    TargetGroup:
      Description: "newly created target group"
      Value:
        Ref: "TargetGroup"    
  AWSTemplateFormatVersion: '2010-09-09' 