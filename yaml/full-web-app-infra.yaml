---
  Description: "A Cfn template that included the infrastructure to build a basic httpd web application"
  Parameters:
    PrivateCidrBlockAzA:
      Type: String
      Default: "10.0.2.0/24"   
    PrivateCidrBlockAzB:
      Type: String
      Default: "10.0.1.0/24"      
    VpcCidrBlock:
      Type: String
      Default: "10.0.0.0/16"        
    KeyName:
      Type: String
      Default: "garrett-keypair"
    ImageId:
      Type: String  
      Default: "ami-a0cfeed8"
    InstanceType:
      Type: String  
      Default: "t2.medium"
  Resources:
    myVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCidrBlock
        EnableDnsSupport: 'false'
        EnableDnsHostnames: 'false'
        InstanceTenancy: default
        Tags:
        - Key: Name
          Value: garretts-cfn-vpc
    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId:
          Ref: myVPC
        Tags:
        - Key: foo
          Value: bar
      DependsOn: myVPC          
    MyInternetGateway:
      Type: AWS::EC2::InternetGateway
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref myVPC
        InternetGatewayId: !Ref MyInternetGateway
      DependsOn:
        - MyInternetGateway
        - myVPC
    Route:
      Type: AWS::EC2::Route
      DependsOn: GatewayToInternet
      Properties:
        RouteTableId:
          Ref: RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: MyInternetGateway     
      DependsOn: 
        - AttachGateway    
    PrivateSubnetAzA:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: myVPC
        CidrBlock: !Ref PrivateCidrBlockAzA
        AvailabilityZone: "us-west-2a"
        Tags:
        - Key: Name
          Value: garretts-cfn-subnet 
    PrivateSubnetAzB:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: myVPC
        CidrBlock: !Ref PrivateCidrBlockAzB
        AvailabilityZone: "us-west-2b"
        Tags:
        - Key: Name
          Value: garretts-cfn-subnet         
    FirstEIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
    SecondEIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc
    LoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        SubnetMappings:
          - AllocationId: !GetAtt 
              - FirstEIP
              - AllocationId
            SubnetId: !Ref PrivateSubnetAzA
          - AllocationId: !GetAtt 
              - SecondEIP
              - AllocationId
            SubnetId: !Ref PrivateSubnetAzB
        Type: network
        IpAddressType: ipv4
      DependsOn: Route  
    TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        Port: 80
        Protocol: TCP
        TargetType: instance
        VpcId: !Ref myVPC
    Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
          DefaultActions: 
            - 
              Type: "forward"
              TargetGroupArn: 
                Ref: "TargetGroup"
          LoadBalancerArn:    
            Ref: LoadBalancer
          Port: '80'
          Protocol: TCP
      DependsOn:
        - LoadBalancer
    InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Ref: myVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
    LaunchConfig: 
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties: 
        KeyName: 
          Ref: "KeyName"
        ImageId: 
          Ref: "ImageId"
        UserData: 
          Fn::Base64: 
            !Sub |
              yum update -y
              yum install httpd -y
        SecurityGroups: 
          - Ref: "InstanceSecurityGroup"
        InstanceType: 
          Ref: "InstanceType"
      DependsOn: InstanceSecurityGroup    
    AutoScalingGroup:          
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties: 
        LaunchConfigurationName: 
          Ref: "LaunchConfig"
        MinSize: "2"
        MaxSize: "2"
        TargetGroupARNs:
          - Ref: TargetGroup
        VPCZoneIdentifier:
          - Ref: PrivateSubnetAzA
          - Ref: PrivateSubnetAzB
      DependsOn: LaunchConfig
  Outputs:   
    AutoScalingGroup:
      Description: "The newly created asg"
      Value:
        Ref: "AutoScalingGroup"
    LaunchConfig:
      Description: "the newly created launch config"
      Value:
        Ref: "LaunchConfig"
    TargetGroup:
      Description: "newly created target group"
      Value:
        Ref: "TargetGroup"    
  AWSTemplateFormatVersion: '2010-09-09' 